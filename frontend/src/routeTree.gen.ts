/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as RecoverPasswordImport } from './routes/recover-password'
import { Route as ProjectsImport } from './routes/projects'
import { Route as LoginImport } from './routes/login'
import { Route as HomeImport } from './routes/home'
import { Route as ComparisionsImport } from './routes/comparisions'
import { Route as HomeIndexImport } from './routes/home/index'
import { Route as HomeSettingsImport } from './routes/home/settings'
import { Route as HomeItemsImport } from './routes/home/items'
import { Route as HomeAdminImport } from './routes/home/admin'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  path: '/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsRoute = ProjectsImport.update({
  path: '/projects',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const ComparisionsRoute = ComparisionsImport.update({
  path: '/comparisions',
  getParentRoute: () => rootRoute,
} as any)

const HomeIndexRoute = HomeIndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
  beforeLoad: async () => {
    throw redirect({
      to: '/projects',
    });
  },
} as any);

const HomeSettingsRoute = HomeSettingsImport.update({
  path: '/settings',
  getParentRoute: () => HomeRoute,
} as any)

const HomeItemsRoute = HomeItemsImport.update({
  path: '/items',
  getParentRoute: () => HomeRoute,
} as any)

const HomeAdminRoute = HomeAdminImport.update({
  path: '/admin',
  getParentRoute: () => HomeRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/comparisions': {
      preLoaderRoute: typeof ComparisionsImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/projects': {
      preLoaderRoute: typeof ProjectsImport
      parentRoute: typeof rootRoute
    }
    '/recover-password': {
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/home/admin': {
      preLoaderRoute: typeof HomeAdminImport
      parentRoute: typeof HomeImport
    }
    '/home/items': {
      preLoaderRoute: typeof HomeItemsImport
      parentRoute: typeof HomeImport
    }
    '/home/settings': {
      preLoaderRoute: typeof HomeSettingsImport
      parentRoute: typeof HomeImport
    }
    '/home/': {
      preLoaderRoute: typeof HomeIndexImport
      parentRoute: typeof HomeImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  ComparisionsRoute,
  HomeRoute.addChildren([
    HomeAdminRoute,
    HomeItemsRoute,
    HomeSettingsRoute,
    HomeIndexRoute,
  ]),
  LoginRoute,
  ProjectsRoute,
  RecoverPasswordRoute,
  ResetPasswordRoute,
  SignupRoute,
])

/* prettier-ignore-end */
